name: "CI"

on:
  workflow_dispatch:
  push:
    branches:
      - "main"
  pull_request:
  merge_group:

concurrency:
  group: "ci-${{ github.event.pull_request.event.number || github.sha }}"
  cancel-in-progress: true

jobs:

  changes:
    runs-on: ubuntu-latest
    # Required permissions
    permissions:
      pull-requests: read
    # Set job outputs to values from filter step
    outputs:
      pkgdb: ${{ steps.filter.outputs.pkgdb }}
    steps:
    # For pull requests it's not necessary to checkout the code
    - uses: "actions/checkout@v4"

    - uses: dorny/paths-filter@v2
      id: filter
      with:
        base: ${{ github.event.merge_group.base_ref || 'main' }}
        ref: ${{ github.event.merge_group.head_ref || github.ref }}
        filters: |
          pkgdb:
            - ".github/workflows/**"
            - "pkgdb/**"
            - "pkgs/**"
            - "Justfile"
            - "flake.nix"
            - "flake.lock"
            - "shells/**"

  pkgdb-dev:
    name: "Pkgdb"
    runs-on: ${{ matrix.os }}
    if: ${{ github.event_name == 'workflow_dispatch' || needs.changes.outputs.pkgdb == 'true' }}
    needs:
      - "changes"

    strategy:
      fail-fast: false
      matrix:
        os:
          - "ubuntu-22.04-8core"
          - "macos-latest-xl"

    # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
    permissions:
      contents: read
      pages: write
      id-token: write

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4"
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref || github.ref }}

      - name: ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: ${{ github.job }}-${{ matrix.os }}
      - name: "Setup"
        uses: "./.github/actions/common-setup"
        with:
          GITHUB_ACCESS_TOKEN:    "${{ secrets.NIX_GIT_TOKEN }}"
          SUBSTITUTER:            "${{ vars.FLOX_CACHE_PUBLIC_BUCKET }}"
          SUBSTITUTER_KEY:        "${{ secrets.FLOX_CACHE_PUBLIC_NIX_SECRET_KEY }}"
          AWS_ACCESS_KEY_ID:      "${{ secrets.FLOX_CACHE_PUBLIC_AWS_ACCESS_KEY_ID }}"
          AWS_SECRET_ACCESS_KEY:  "${{ secrets.FLOX_CACHE_PUBLIC_AWS_SECRET_ACCESS_KEY }}"
          SSH_KEY:                "${{ secrets.FLOXBOT_SSH_KEY }}"

      - name: "Build"
        run: nix develop -L --no-update-lock-file --command just build-pkgdb


  cli-dev:
    name: "Flox CLI Tests"
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os:
          - "ubuntu-22.04-8core"
          - "macos-latest-xl"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4"
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref || github.ref }}

      - name: ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: ${{ github.job }}-${{ matrix.os }}
      - name: "Setup"
        uses: "./.github/actions/common-setup"
        with:
          GITHUB_ACCESS_TOKEN:    "${{ secrets.NIX_GIT_TOKEN }}"
          SUBSTITUTER:            "${{ vars.FLOX_CACHE_PUBLIC_BUCKET }}"
          SUBSTITUTER_KEY:        "${{ secrets.FLOX_CACHE_PUBLIC_NIX_SECRET_KEY }}"
          AWS_ACCESS_KEY_ID:      "${{ secrets.FLOX_CACHE_PUBLIC_AWS_ACCESS_KEY_ID }}"
          AWS_SECRET_ACCESS_KEY:  "${{ secrets.FLOX_CACHE_PUBLIC_AWS_SECRET_ACCESS_KEY }}"
          SSH_KEY:                "${{ secrets.FLOXBOT_SSH_KEY }}"

      - name: "Cache Cargo"
        uses: "actions/cache@v4"
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: "cargo-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}"
          restore-keys: "cargo-${{ runner.os }}-"

      - name: "Build"
        run: nix develop -L --no-update-lock-file --command just build-cli
